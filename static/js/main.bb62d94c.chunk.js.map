{"version":3,"sources":["Contexts/TimeContext.js","Components/Cost/index.js","Components/Header/index.js","Components/Timer/index.js","App.js","reportWebVitals.js","index.js"],"names":["TimeContext","createContext","TimeContextProvider","children","useState","timeContext","time","setTime","Provider","value","Cost","num","useContext","className","toFixed","replace","Header","Timer","second","setSecond","minute","setMinute","isActive","setIsActive","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEMA,EAAcC,0BAEdC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAwBC,mBAAS,GAAjC,mBAEMC,EAAc,CAClBC,KAHF,KAIEC,QAJF,MAMA,OACA,cAACP,EAAYQ,SAAb,CAAsBC,MAAOJ,EAA7B,SACGF,KCIUO,EAfF,WACX,IAEwBC,EAFhBL,EAASM,qBAAWZ,GAApBM,KAIR,OACE,sBAAKO,UAAU,cAAf,UACE,yGACA,sBAAKA,UAAU,MAAf,oBALoBF,EAMIL,GAPR,GAAG,MACQ,IAAMK,EAAIG,QAAQ,GAAGC,QAAQ,0BAA2B,eCG1EC,G,MANA,kBACb,+DCsDaC,G,MApDD,WACZ,MAA4Bb,mBAAS,MAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAA4Bf,mBAAS,MAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAgCjB,oBAAS,GAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KAEA,EAA0BX,qBAAWZ,GAA7BM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEdiB,qBAAU,WACR,IAAIC,EAgBJ,OAfIH,IACFG,EAAaC,aAAY,WACvB,IAAMC,EAAgBrB,EAAO,GACvBsB,EAAgBC,KAAKC,MAAMxB,EAAO,IAElCyB,EAAkD,IAAjCC,OAAOL,GAAeM,OAAtB,WAAyCN,GAAiBA,EAC3EO,EAAkD,IAAjCF,OAAOJ,GAAeK,OAAtB,WAAyCL,GAAiBA,EAEjFT,EAAUY,GACVV,EAAUa,GAEV3B,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OACtB,MAGE,kBAAM6B,cAAcV,MAC1B,CAACH,EAAUf,EAASD,IASvB,OACE,sBAAKO,UAAU,eAAf,UACE,gCACe,OAAXO,GACE,sBAAKP,UAAU,MAAf,UAAsBO,EAAtB,cAEJ,sBAAKP,UAAsB,OAAXO,EAAkB,MAAQ,QAA1C,UAAoDF,EAApD,iBAEF,gCACE,wBAAQkB,QAAS,kBAAMb,GAAaD,IAAWT,UAAU,QAAzD,SACGS,EAAW,QAAS,UAEvB,wBAAQc,QAnBA,WACZb,GAAY,GACZhB,EAAQ,GACRY,EAAU,MACVE,EAAU,OAekBR,UAAU,QAAlC,2B,MC9BOwB,MAdf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,aCFKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb62d94c.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\n\nconst TimeContext = createContext();\n\nconst TimeContextProvider = ({ children }) => {\n  const [time, setTime] = useState(0);\n\n  const timeContext = {\n    time,\n    setTime\n  }\n  return (\n  <TimeContext.Provider value={timeContext}>\n    {children}\n  </TimeContext.Provider>\n)};\n\nexport  { TimeContext, TimeContextProvider };\n","import { useContext } from 'react';\nimport { TimeContext } from '../../Contexts/TimeContext';\nconst Cost = () => {\n  const { time } = useContext(TimeContext);\n  const secondValue = 25/(60*60);\n  const currencyFormat = (num) =>'$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n\n  return (\n    <div className=\"cost column\">\n      <div>At an avg of $25 per hour and with one attendee this meeting cost is: </div>\n      <div className='big'>\n        Cost: {currencyFormat(time*secondValue)}\n      </div>\n    </div>\n  );\n};\n\nexport default Cost;\n","import './Header.css'\n\nconst Header = () => (\n  <header>\n    Meeting cost calculator\n  </header>\n);\n\nexport default Header;\n","import { useState, useEffect, useContext } from 'react';\nimport { TimeContext } from '../../Contexts/TimeContext';\n\nimport './Timer.css';\n\nconst Timer = () => {\n  const [second, setSecond] = useState('00');\n  const [minute, setMinute] = useState('00');\n  const [isActive, setIsActive] = useState(false);\n\n  const { time, setTime } = useContext(TimeContext);\n\n  useEffect(() => {\n    let intervalId;\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = time % 60;\n        const minuteCounter = Math.floor(time / 60);\n\n        const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n        const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n\n        setTime(time => time + 1);\n      }, 1000)\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, setTime, time])\n\n  const reset = () => {\n    setIsActive(false);\n    setTime(0);\n    setSecond('00');\n    setMinute('00')\n  };\n\n  return (\n    <div className=\"timer column\">\n      <div>\n        { minute !== '00' &&\n            <div className=\"big\">{minute} Minutes</div>\n        }\n        <div className={minute === '00' ? 'big' : 'small'}>{second} Seconds</div>\n      </div>\n      <div>\n        <button onClick={() => setIsActive(!isActive)} className=\"start\">\n          {isActive ? \"Pause\": \"Start\"}\n        </button>\n        <button onClick={reset} className=\"reset\">Reset</button>\n      </div>\n   </div>\n  )\n}\n\nexport default Timer;\n","import Cost from \"./Components/Cost\";\nimport Header from \"./Components/Header\";\nimport Timer from \"./Components/Timer\";\nimport { TimeContextProvider } from \"./Contexts/TimeContext\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TimeContextProvider>\n        <div className=\"container\">\n          <Timer />\n          <Cost />\n        </div>\n      </TimeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}