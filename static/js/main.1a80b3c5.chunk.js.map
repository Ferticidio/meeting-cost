{"version":3,"sources":["Contexts/TimeContext.js","Contexts/AttendeesContext.js","Components/Timer/index.js","Components/Cost/index.js","Components/Header/index.js","Components/Controls/index.js","Components/Attendees/index.js","App.js","reportWebVitals.js","index.js"],"names":["TimeContext","createContext","TimeContextProvider","children","useState","time","setTime","timeContext","isActive","setIsActive","Provider","value","AttendeesContext","AttendeesContextProvider","attendees","setAttendees","attendeesContext","hourSalary","setHourSalary","Timer","second","setSecond","minute","setMinute","useContext","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","className","Cost","secondValue","currencyFormat","num","toFixed","replace","Header","Controls","onClick","Attendees","for","name","type","onChange","event","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAEMA,EAAcC,0BAEdC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAEMG,EAAc,CAClBF,OACAC,UACAE,SALF,KAMEC,YANF,MAQA,OACA,cAACT,EAAYU,SAAb,CAAsBC,MAAOJ,EAA7B,SACGJ,KCdCS,EAAmBX,0BAEnBY,EAA2B,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,SAClC,EAAkCC,mBAAS,GAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAoCX,mBAAS,IAA7C,mBAEMY,EAAmB,CACvBF,YACAC,eACAE,WALF,KAMEC,cANF,MAQA,OACA,cAACN,EAAiBF,SAAlB,CAA2BC,MAAOK,EAAlC,SACGb,KCiCUgB,G,YA5CD,WACZ,MAA4Bf,mBAAS,MAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAA4BjB,mBAAS,MAArC,mBAAOkB,EAAP,KAAeC,EAAf,KAEA,EAAoCC,qBAAWxB,GAAvCK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,SA2BvB,OAzBAiB,qBAAU,WACR,IAAIC,EAoBJ,OAnBIlB,IACFkB,EAAaC,aAAY,WACvB,IAAMC,EAAgBvB,EAAO,GACvBwB,EAAgBC,KAAKC,MAAM1B,EAAO,IAElC2B,EAAkD,IAAjCC,OAAOL,GAAeM,OAAtB,WAAyCN,GAAiBA,EAC3EO,EAAkD,IAAjCF,OAAOJ,GAAeK,OAAtB,WAAyCL,GAAiBA,EAEjFR,EAAUW,GACVT,EAAUY,GAEV7B,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OACtB,MAGAG,GAAqB,IAATH,IACfgB,EAAU,MACVE,EAAU,OAEL,kBAAMa,cAAcV,MAC1B,CAAClB,EAAUF,EAASD,IAIrB,sBAAKgC,UAAU,QAAf,UACE,kDACA,gCACe,OAAXf,GACE,gCAAMA,EAAN,cAEJ,gCAAMF,EAAN,sBClBOkB,EAlBF,WACX,IAAQjC,EAASmB,qBAAWxB,GAApBK,KACR,EAAkCmB,qBAAWZ,GAArCE,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,WACbsB,EAAczB,EAAUG,EAAV,KACduB,EAAiB,SAACC,GAAD,MAAQ,IAAMA,EAAIC,QAAQ,GAAGC,QAAQ,0BAA2B,QAEvF,OACE,sBAAKN,UAAU,OAAf,UACE,8CACA,uDAA0BG,EAAevB,GAAzC,sBAAyEH,EAAzE,YAA6FA,EAAY,EAAI,IAAM,GAAnH,6BACA,sBAAKuB,UAAU,MAAf,mBACSG,EAAenC,EAAKkC,MAE7B,cAAC,EAAD,QCZSK,G,MANA,kBACb,+DCmBaC,G,MAhBE,WACf,MAA2CrB,qBAAWxB,GAA9CM,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,YAK3B,OACE,sBAAK4B,UAAU,WAAf,UACE,wBAAQS,QAAS,kBAAMrC,GAAaD,IAAW6B,UAAU,QAAzD,SACG7B,EAAW,QAAS,UAEvB,wBAAQsC,QATE,WACZrC,GAAY,GACZH,EAAQ,IAOkB+B,UAAU,QAAlC,wBCcSU,G,MA1BG,WAChB,MAKIvB,qBAAWZ,GAJbE,EADF,EACEA,UACAC,EAFF,EAEEA,aACAE,EAHF,EAGEA,WACAC,EAJF,EAIEA,cAKF,OACE,sBAAKmB,UAAU,mBAAf,UACE,yEACA,sBAAKA,UAAU,gBAAf,UACE,uBAAOW,IAAI,YAAX,wBACA,uBAAOC,KAAK,YAAYC,KAAK,SAASC,SAPd,SAACC,GAAD,OAAWrC,GAAcqC,EAAMC,OAAO1C,QAOSA,MAAOG,OAEhF,sBAAKuB,UAAU,gBAAf,UACE,uBAAOW,IAAI,SAAX,yBACA,uBAAOC,KAAK,SAASC,KAAK,SAASC,SAVV,SAACC,GAAD,OAAWlC,GAAekC,EAAMC,OAAO1C,QAUKA,MAAOM,OAE9E,cAAC,EAAD,S,YCDSqC,MAhBf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,eCLGkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a80b3c5.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\n\nconst TimeContext = createContext();\n\nconst TimeContextProvider = ({ children }) => {\n  const [time, setTime] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  const timeContext = {\n    time,\n    setTime,\n    isActive,\n    setIsActive,\n  }\n  return (\n  <TimeContext.Provider value={timeContext}>\n    {children}\n  </TimeContext.Provider>\n)};\n\nexport  { TimeContext, TimeContextProvider };\n","import { createContext, useState } from 'react';\n\nconst AttendeesContext = createContext();\n\nconst AttendeesContextProvider = ({ children }) => {\n  const [attendees, setAttendees] = useState(2);\n  const [hourSalary, setHourSalary] = useState(25);\n\n  const attendeesContext = {\n    attendees,\n    setAttendees,\n    hourSalary,\n    setHourSalary,\n  }\n  return (\n  <AttendeesContext.Provider value={attendeesContext}>\n    {children}\n  </AttendeesContext.Provider>\n)};\n\nexport  { AttendeesContext, AttendeesContextProvider };\n","import { useState, useEffect, useContext } from 'react';\nimport { TimeContext } from '../../Contexts/TimeContext';\n\nimport './Timer.css'\n\nconst Timer = () => {\n  const [second, setSecond] = useState('00');\n  const [minute, setMinute] = useState('00');\n\n  const { time, setTime, isActive } = useContext(TimeContext);\n\n  useEffect(() => {\n    let intervalId;\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = time % 60;\n        const minuteCounter = Math.floor(time / 60);\n\n        const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n        const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n\n        setTime(time => time + 1);\n      }, 1000)\n    }\n\n    if (!isActive && time === 0) { // Reset\n      setSecond('00');\n      setMinute('00');\n    }\n    return () => clearInterval(intervalId);\n  }, [isActive, setTime, time])\n\n\n  return (\n    <div className=\"timer\">\n      <h2>Meeting duration</h2>\n      <div>\n        { minute !== '00' &&\n            <div>{minute} Minutes</div>\n        }\n        <div>{second} Seconds</div>\n      </div>\n   </div>\n  )\n}\n\nexport default Timer;\n","import { useContext } from 'react';\nimport { TimeContext } from '../../Contexts/TimeContext';\nimport { AttendeesContext } from '../../Contexts/AttendeesContext';\n\nimport './Cost.css';\nimport Timer from '../Timer';\n\nconst Cost = () => {\n  const { time } = useContext(TimeContext);\n  const { attendees, hourSalary } = useContext(AttendeesContext);\n  const secondValue = attendees*hourSalary/(60*60);\n  const currencyFormat = (num) =>'$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n\n  return (\n    <div className=\"cost\">\n      <h1>Meeting Cost</h1>\n      <div>At an avg salary of {currencyFormat(hourSalary)} per hour and with {attendees} attendee{attendees > 1 ? 's' : ''} this meeting cost is: </div>\n      <div className=\"big\">\n        Cost: {currencyFormat(time*secondValue)}\n      </div>\n      <Timer />\n    </div>\n  );\n};\n\nexport default Cost;\n","import './Header.css'\n\nconst Header = () => (\n  <header>\n    Meeting cost calculator\n  </header>\n);\n\nexport default Header;\n","import { useContext } from 'react';\n\nimport { TimeContext } from '../../Contexts/TimeContext';\n\nimport './Controls.css'\n\nconst Controls = () => {\n  const { setTime, isActive, setIsActive } = useContext(TimeContext);\n  const reset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n  return (\n    <div className=\"controls\">\n      <button onClick={() => setIsActive(!isActive)} className=\"start\">\n        {isActive ? \"Pause\": \"Start\"}\n      </button>\n      <button onClick={reset} className=\"reset\">Reset</button>\n    </div>\n  );\n};\n\nexport default Controls;\n","import { useContext } from \"react\";\nimport { AttendeesContext } from \"../../Contexts/AttendeesContext\";\nimport Controls from \"../Controls\";\n\nimport './Attendees.css'\nconst Attendees = () => {\n  const {\n    attendees,\n    setAttendees,\n    hourSalary,\n    setHourSalary,\n  } = useContext(AttendeesContext);\n\n  const handleAttendeesChange = (event) => setAttendees(+event.target.value);\n  const handleHourSalaryChange = (event) => setHourSalary(+event.target.value);\n  return (\n    <div className=\"flex_1 attendees\">\n      <h2>Set meeting attendees and hourly salary</h2>\n      <div className=\"input_control\">\n        <label for=\"attendees\">Ateendees:</label>\n        <input name=\"attendees\" type=\"number\" onChange={handleAttendeesChange} value={attendees} />\n      </div>\n      <div className=\"input_control\">\n        <label for=\"salary\">AVG salary:</label>\n        <input name=\"salary\" type=\"number\" onChange={handleHourSalaryChange} value={hourSalary} />\n      </div>\n      <Controls />\n    </div>\n  )\n};\n\nexport default Attendees;\n","import Cost from \"./Components/Cost\";\nimport Header from \"./Components/Header\";\nimport { TimeContextProvider } from \"./Contexts/TimeContext\";\nimport { AttendeesContextProvider } from \"./Contexts/AttendeesContext\";\nimport Attendees from \"./Components/Attendees\"\n\nimport './App.css';\nimport './Shared/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TimeContextProvider>\n        <AttendeesContextProvider>\n          <div className=\"container\">\n            <Attendees />\n            <Cost />\n          </div>\n        </AttendeesContextProvider>\n      </TimeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}